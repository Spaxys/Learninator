@model Learninator.ViewModels.TaggingVM
@{
    ViewData["Title"] = "Tagging";
}

<h1>Tagging</h1>
@Html.ActionLink("Back", "Index", "Test")

<form method="post">
    <label asp-for="Name" class="control-label" />
    <span id="tagName">[TagName]</span><input style="display:inline" asp-for="Name" type="text" id="tagInput" />
    <h2 id="tagId">-2</h2>
    <input type="submit" value="Create" class="btn btn-default" />
</form>

@section scripts
{
<script src="~/js/Tag.js" asp-append-version="true"></script>
<script>
   $(document).ready(function () {
        var inputTag = $("#tagInput");
        var idTag = $("#tagId");
        var nameTag = $("#tagName");
       inputTag.on("change", x => {
           var inputs = inputTag.val().split(';');
           var ids = "";
           var names = "";
           var promises = [];
           console.log(inputs);
           for (var i = 0; i < inputs.length; i++)
           {
               console.log("Iteration " + i + " of " + inputs.length);
               promises.push(Tag.getByName(inputs[i]));
           }
           Promise.all(promises)
               .then(function (values) {
                   idTag.html("");
                   nameTag.html("");
                   console.log(values);
                   console.log("Typeof values: " + typeof values);
                   for (var v of values) {
                   console.log("Value: " + JSON.stringify(v));
                   console.log("Typeof value: " + typeof v);
                       ids += ", " + v.id;
                       names += ", " + v.name;
                   };
                   idTag.html(ids);
                   nameTag.html(names);
               })
               .catch(error => {
                   console.log(error)
                   idTag.html("");
                   nameTag.html("");
               });
        })
    })

</script>
}
